name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GCP credentials
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > /tmp/gcp-key.json
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Authenticate to Google Cloud
        run: gcloud auth activate-service-account --key-file /tmp/gcp-key.json

      - name: Set Google Cloud project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Run Terraform
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

  deploy_app:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        run: |
          echo "Decoding and setting up GCP credentials..."
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file /tmp/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region ${{ secrets.GCP_REGION }}
          echo "Enabling Cloud Resource Manager API if not enabled..."
          gcloud services enable cloudresourcemanager.googleapis.com

      - name: Install gke-gcloud-auth-plugin
        run: |
          echo "Installing gke-gcloud-auth-plugin..."
          curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-$(curl -sSL https://cloud.google.com/sdk/docs/release-notes | grep -oP 'release-[0-9]+' | head -n 1 | sed 's/release-//')-linux-x86_64.tar.gz | tar -xz
          ./google-cloud-sdk/install.sh --quiet
          ./google-cloud-sdk/bin/gcloud components install gke-gcloud-auth-plugin --quiet
          ./google-cloud-sdk/bin/gcloud auth configure-docker

      - name: Set up kubeconfig
        run: |
          echo "Creating .kube directory and setting up kubeconfig..."
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          echo "KUBECONFIG=~/.kube/config" >> $GITHUB_ENV

      - name: Deploy to Kubernetes
        run: |
          echo "Getting Kubernetes credentials..."
          ./google-cloud-sdk/bin/gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          echo "Deploying to Kubernetes..."
          kubectl apply -f mysql-deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl get services
        env:
          KUBECONFIG: ~/.kube/config
