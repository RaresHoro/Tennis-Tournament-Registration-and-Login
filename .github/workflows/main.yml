name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GCP credentials
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > /tmp/gcp-key.json
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json" >> $GITHUB_ENV

      - name: Run Terraform
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

  build_image:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          DOCKER_TAG: latest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:$DOCKER_TAG
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          DOCKER_TAG: latest

  deploy_app:
    runs-on: ubuntu-latest
    needs: build_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ${{ secrets.KUBECONFIG_PATH }}
          export KUBECONFIG=${{ secrets.KUBECONFIG_PATH }}
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
          KUBECONFIG_PATH: /tmp/kubeconfig

      - name: Get Kubernetes credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f mysql-deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl get services
        env:
          KUBECONFIG: /tmp/kubeconfig
