name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GCP credentials
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > /tmp/gcp-key.json
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json" >> $GITHUB_ENV

      - name: Run Terraform
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

  deploy_app:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Deploy to Kubernetes
        run: |
          # Checkout code
          git clone https://github.com/${{ github.repository }}.git .

          # Authenticate to Google Cloud
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

          # Install Google Cloud SDK and gke-gcloud-auth-plugin
          gcloud components update kubectl
          sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin -y

          # Set up kubeconfig
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          echo "KUBECONFIG=~/.kube/config" >> $GITHUB_ENV

          # Deploy to Kubernetes
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl apply -f mysql-deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl get services
        env:
          KUBECONFIG: ~/.kube/config
